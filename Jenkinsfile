pipeline {
    agent any
    environment {
        DOCKER_USERNAME = "vovanluan2953"
        IMAGE_NAME = "webnoithat"
    }
    
    triggers {
        pollSCM('H/5 * * * *')
    }
    
    stages {
        stage('Checkout') {
            steps {
                checkout scm
                bat 'echo ‚úÖ Repository checked out'
            }
        }

        stage('Clean Docker Cache') {
            steps {
                bat """
                    echo üßπ Cleaning Docker cache...
                    docker system prune -f || echo "No need to clean"
                    docker rmi %DOCKER_USERNAME%/%IMAGE_NAME%:latest 2>nul || echo "Image not found, continuing..."
                """
            }
        }

        stage('Docker Build') {
            steps {
                bat """
                    echo üèóÔ∏è Building Docker image...
                    docker build --no-cache -t %DOCKER_USERNAME%/%IMAGE_NAME%:latest .
                    echo ‚úÖ Docker build completed
                """
            }
        }

        stage('Docker Login') {
            steps {
                withCredentials([usernamePassword(
                    credentialsId: 'dockerhub-cred',
                    usernameVariable: 'DOCKER_USER', 
                    passwordVariable: 'DOCKER_PASS'
                )]) {
                    bat """
                        echo üîê Logging into Docker Hub...
                        echo %DOCKER_PASS% | docker login -u %DOCKER_USER% --password-stdin
                        echo ‚úÖ Login exit code: %ERRORLEVEL%
                    """
                }
            }
        }

        stage('Push Docker Hub') {
            steps {
                bat """
                    echo üì§ Pushing image to Docker Hub...
                    docker push %DOCKER_USERNAME%/%IMAGE_NAME%:latest
                    echo ‚úÖ Image pushed successfully!
                """
            }
        }

        stage('Deploy Notification') {
            steps {
                bat """
                    echo ========================================
                    echo üöÄ DEPLOYMENT SUCCESSFUL!
                    echo ========================================
                    echo üì¶ Image: %DOCKER_USERNAME%/%IMAGE_NAME%:latest
                    echo üîÑ Render auto-deploying...
                    echo üåê Live: https://webnoithat.onrender.com
                    echo ========================================
                """
            }
        }
    }
    
    post {
        always {
            bat 'docker logout || echo "Already logged out"'
            bat 'echo üïí Pipeline completed at %TIME%'
        }
        success {
            bat 'echo üéâ DEPLOYMENT SUCCESSFUL!'
        }
        failure {
            bat 'echo ‚ùå DEPLOYMENT FAILED'
        }
    }
}